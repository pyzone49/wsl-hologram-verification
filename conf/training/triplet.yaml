trainer:
  _target_: src.traindl.trainer_general.Trainer
  epochs_max: 100
  accelerator: cuda
  lr: 0.00001
  run_name: "randomcrop_blur_colorjitter_adamw"
  model: ${model.model}
  checkpoint_callback:
    _target_: lightning.pytorch.callbacks.ModelCheckpoint
    save_top_k: -1
    save_last: true
    save_on_train_epoch_end: true
    every_n_epochs: 1
    filename: '{epoch:02d}'
  backbone_save_callback:
    _target_: src.traindl.trainer_general.BackboneSaveCallback
    save_dir: "checkpoints/backbones"
    filename_prefix: "backbone"

datamodule: 
  _target_: src.traindl.trainer_general.MIDVHoloDataModule
  input_dir: ${data.train.input_dir}
  split_dir: ${paths.midvholo_split_dir}
  num_workers: 8
  batch_size: 16
  transform:
    _target_: torchvision.transforms.Compose
    transforms:
      - _target_: torchvision.transforms.Resize
        size: 256
      - _target_: torchvision.transforms.RandomResizedCrop
        size: 224
        scale: [0.8, 1]
      - _target_: torchvision.transforms.RandomApply
        transforms: 
          _target_: torch.nn.ModuleList
          modules:
            - _target_: torchvision.transforms.GaussianBlur
              _convert_: partial
              kernel_size: [3, 11]
              sigma: [2, 10]
        p: 0.4
      - _target_: torchvision.transforms.RandomApply
        transforms: 
          _target_: torch.nn.ModuleList
          modules:
            - _target_: torchvision.transforms.ColorJitter
              brightness: 0.3
              contrast: 0.1
              saturation: 0.05
              # hue: 0.01
        p: 0.4
      - _target_: torchvision.transforms.ToTensor
      - _target_: torchvision.transforms.Normalize
        mean: [0.485, 0.456, 0.406]
        std: [0.229, 0.224, 0.225]